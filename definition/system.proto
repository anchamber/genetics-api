syntax = "proto3";

option go_package = "github.com/anchamber/genetics-system/proto";

package genetics_system;
import "api.proto";

service SystemService {
  rpc GetSystems(GetSystemsRequest) returns (stream SystemResponse) {}
  rpc GetSystem(GetSystemRequest) returns (SystemResponse) {}
  rpc CreateSystem(CreateSystemRequest) returns (CreateSystemResponse) {}
  rpc UpdateSystem(UpdateSystemRequest) returns (UpdateSystemResponse) {}
  rpc DeleteSystem(DeleteSystemRequest) returns (DeleteSystemResponse) {}
}

message System {
}
message Systems {
  repeated System systems = 1;
}
enum SystemType {
  UNKOWN = 0;
  GLASS = 1;
  TECHNIPLAST = 2;
}

message GetSystemsRequest {
  repeated api.Filter filters = 1;
  api.Pagination pageination = 2;
}
message GetSystemRequest {
  string name = 1;
}
message SystemResponse {
  int64 id = 1;
  string name = 2;
  string location = 3;
  SystemType type = 4;
  string responsible = 5;
  int32 cleaning_interval = 6;
  int64 last_cleaned = 7;
}

message CreateSystemRequest {
  string name = 1;
  string location = 2;
  SystemType type = 3;
  string responsible = 4;
  int32 cleaning_interval = 5;
  int64 last_cleaned = 6;
}
message CreateSystemResponse {
}

message UpdateSystemRequest {
  string name = 1;
  string location = 2;
  SystemType type = 3;
  string responsible = 4;
  int32 cleaning_interval = 5;
  int64 last_cleaned = 6;
}
message UpdateSystemResponse {
}

message DeleteSystemRequest {
  string name = 1;
}
message DeleteSystemResponse {
}